@model BudgetPlanner.ViewModels.DashboardViewModel
@using Microsoft.AspNet.Identity
@using BudgetPlanner.Models


@{
    ViewBag.Title = "Index";
}

<div class="container">
    <div class="row">
        <div class="col-md-6">
            <div id="CircleBudgetData" style="height:400px;"></div>
        </div>
        <div class="col-md-6">
            @Html.Action("HouseMembers", "Home")
        </div>
    </div>
    <div class="row">
        <div id="AllBudgetData" style="height:300px; width:auto;"></div>
    </div>
    <br/>
    <br/>
    <br/>
    <br/>
    <div class="row">
        <div class="col-md-12">
            <div class="widget stacked">
                <div class="widget-header">
                    <i class="icon-th-large"></i>
                    <h3>All Transaction History</h3>
                </div> <!-- /widget-header -->
                <div class="widget-content">
                    <div class="table-responsive">
                        <table class="table table-bordered table-striped">
                            <thead>
                                <tr>
                                    <th>
                                        @Html.DisplayName("Account Name")
                                    </th>
                                    <th>
                                        @Html.DisplayName("Memo")
                                    </th>
                                    <th>
                                        @Html.DisplayName("Budget Class")
                                    </th>
                                    <th>
                                        @Html.DisplayName("Amount")
                                    </th>
                                    <th>
                                        @Html.DisplayName("Current Balance")
                                    </th>
                                    <th>
                                        @Html.DisplayName("Input Date")
                                    </th>
                                    <th>

                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @{ ApplicationDbContext db = new ApplicationDbContext();
                                    var userId = User.Identity.GetUserId();
                                    var user = db.Users.FirstOrDefault(i => i.Id == userId); }
                                @foreach (var item in Model.Transactions.Take(10))
                                {
                                    <tr>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Account.Name)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Memo)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Type)
                                        </td>
                                        <td>
                                            @if (item.Type == "Income")
                                            {
                                                <p>+ @item.Amount</p>
                                            }
                                            @if (item.Type != "Income")
                                            {
                                                <p>- @item.Amount</p>
                                            }
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Account.CurrentBalance)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Created)
                                        </td>
                                        <td>
                                            <button type="button" class="btn btn-danger identityclass" data-target="#Edit" data-toggle="modal" data-id="@item.Id" data-amount="@item.Amount" data-memo="@item.Memo">Reconcile</button>
                                        </td>
                                    </tr>
                                }
                            </tbody>

                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>

</div>
<div id="Edit" class="modal fade" role="dialog">
    <div class="modal-dialog modal-lg">
        Modal Content
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title" align="center">Reconcile Transaction</h4>
            </div>
            <div class="modal-body">
                @Html.Action("ReconcileFunds", "Home")
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
@section scripts
{
    <script>
    $(function () {
        $(".identityclass").click(function () {
            var idVal = $(this).data('id');
            $(".modal-body #hiddenValue").val(idVal);
            var amountVal = $(this).data('amount');
            $(".modal-body #Amount").val(amountVal);
            var memoVal = $(this).data('memo');
            $(".modal-body #Memo").val(memoVal);
        })
    });

    </script>
    <script>

        $.get('@Url.Action("BudgetData", "Dashboard")', function (result) {
            new Morris.Donut({
                element: "CircleBudgetData",
                data: result.Data,
                colors: ['#922B21', '#AF601A', '#8E44AD', '#F7DC6F', '#17202A', '#7FB3D5', '#4A235A'],
                formatter: function (y, data) { return '$' + y },
                resize: true
            });

        });
      
    </script>
    <script>
        $.get('@Url.Action("BudgetItemData", "Dashboard")', function (result) {
            new Morris.Bar({
                element: "AllBudgetData",
                data: result.Data,
                xkey: 'BudgetItem',
                ykeys: ['CurrentBalance', 'TargetBalance'],
                labels: ['Current Spending', 'Spending Target'],
                barColors: function (row, series, type) {
                    if (series.key == 'CurrentBalance') {
                            return "green";
                    }
                    else {
                        return "orange";
                    }
                },
                resize: true
            });
        });
    </script>
}
